version: "3.8"

services:
  reverse-proxy:
    image: traefik:v2.3
    command: --providers.docker
    ports:
      - "${PORT:-4200}:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  backend:
    labels:
      - traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api
      - traefik.http.routers.backend.rule=PathPrefix(`/api`)
      - traefik.http.routers.backend.middlewares=backend-stripprefix@docker
      - traefik.http.services.backend.loadbalancer.server.port=3001
    build: 
      context: .
      dockerfile: Dockerfile-backend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PGUSER=${PGUSER:-postgres}
      - PGHOST=${PGHOST:-database}
      - PGPASSWORD=${PGPASSWORD:-!cYGyYSC_%6pDa7/}
      - PGDATABASE=${PGDATABASE:-postgres}
      - PGPORT=${PGPORT:-5432}
    volumes:
      - ./backend:/home/node/app
      - ./common:/home/node/common
      - node_modules_backend:/home/node/app/node_modules
      - node_modules_common:/home/node/common/node_modules
  database:
    image: postgres:12
    environment:
      - POSTGRES_PASSWORD=!cYGyYSC_%6pDa7/
    volumes:
      - db_data:/var/lib/postrgesql/data
  frontend:
    labels:
      - traefik.http.routers.frontend.rule=PathPrefix(`/`)
      - traefik.http.services.frontend.loadbalancer.server.port=3000
    build: 
      context: .
      dockerfile: Dockerfile-frontend
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/home/node/app
      - ./common:/home/node/common
      - node_modules_frontend:/home/node/app/node_modules
      - node_modules_common:/home/node/common/node_modules

volumes:
  db_data:
  node_modules_backend:
  node_modules_frontend:
  node_modules_common:
